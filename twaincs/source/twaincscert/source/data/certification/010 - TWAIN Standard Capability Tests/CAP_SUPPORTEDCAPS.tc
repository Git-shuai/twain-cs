;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CAP_SUPPORTEDCAPS
;   Confirm Basic Negotiation with CAP_SUPPORTEDCAPS
;
; Arguments
;   arg:1 - TW_IDENTITY.ProductName of scanner to test
;
; Globals
;   (none)
;
; Locals
;   name - current test being done
;   cap_supportedcaps - data from MSG_GET for CAP_SUPPORTEDCAPS
;
; Returns
;   pass or fail
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Initialize...
;
echo.titletest 'CAP_SUPPORTEDCAPS v1.0 21-Feb-2020'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MSG_GET CAP_SUPPORTEDCAPS
; If result is not TWRC_SUCCESS, then end with error
;
setlocal name 'MSG_GET'
dsmentry src ds dg_control dat_capability msg_get 'CAP_SUPPORTEDCAPS,0,0,0'
if '${sts:}' != 'SUCCESS' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'
setlocal cap_supportedcaps '${ret:}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If TW_CAPABILITY.Cap is not CAP_SUPPORTEDCAPS, then end with error
;
setlocal name 'TW_CAPABILITY.Cap is CAP_SUPPORTEDCAPS'
if '${getindex:cap_supportedcaps:${get:TW_CAPABILITY.Cap}}' != 'CAP_SUPPORTEDCAPS' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If TW_CAPABILITY.ConType is not TWON_ARRAY, then end with error
;
setlocal name 'TW_CAPABILITY.ConType is TWON_ARRAY'
if '${getindex:cap_supportedcaps:${get:TW_CAPABILITY.ConType}}' != 'TWON_ARRAY' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If TW_ARRAY.ItemType is not TWTY_UINT16, then end with error
;
setlocal name 'TW_ARRAY.ItemType is TWTY_UINT16'
if '${getindex:cap_supportedcaps:${get:TW_ARRAY.ItemType}}' != 'TWTY_UINT16' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If TW_ARRAY.NumItems is equal to zero, then end with error
;
setlocal name 'TW_ARRAY.NumItems > 0'
if '${getindex:cap_supportedcaps:${get:TW_ARRAY.NumItems}}' <= '0' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If CAP_SUPPORTEDCAPS not found, then end with error
;
setlocal name 'Find CAP_SUPPORTEDCAPS'
if '${get:cap_supportedcaps}' !~contains 'CAP_SUPPORTEDCAPS' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If ICAP_PIXELTYPE not found, then end with error
;
setlocal name 'Find ICAP_PIXELTYPE'
if '${get:cap_supportedcaps}' !~contains 'ICAP_PIXELTYPE' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If ICAP_XFERMECH not found, then end with error
;
setlocal name 'Find ICAP_XFERMECH'
if '${get:cap_supportedcaps}' !~contains 'ICAP_XFERMECH' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Summary and cleanup...
;
; Did we pass?
echo.passfail 'SUMMARY' 'pass'
return 'pass'
;
; Ruh-roh...
:MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:name}' 'fail - ${sts:} ${ret:}'
:MAIN.ERROR
echo.passfail 'SUMMARY' 'fail'
return 'fail'
