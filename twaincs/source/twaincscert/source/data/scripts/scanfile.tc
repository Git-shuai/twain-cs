;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Scannative v1.0 21-Jan-2020
; ${arg:1} - product name of scanner to open
; returns: pass or fail
;
; Scan with DAT_IMAGENATIVEXFER...
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Init stuff...
;
setlocal cap_supportedcaps ''
setlocal icap_supportedextimageinfo ''
setlocal index.twimageinfo.count '16'
setlocal index.twpendingxfers.count '0'
setlocal index.twsetupmemxfer.preferred '2'
setlocal imagecount '0'
setglobal g_twainstate '0'
setglobal g_twextimageinfo ''



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Load and open the DSM...
;
setglobal g_twainstate '1'
dsmload
echo 'dsmload'
setglobal g_twainstate '2'
dsmentry src null dg_control dat_parent msg_opendsm hwnd
echo 'parent/opendsm.............${sts:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setglobal g_twainstate '3'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Open the driver...
;
dsmentry src null dg_control dat_identity msg_opends '0,0,0,ENGLISH_USA,USA,,2,4,0x0,,,${arg:1}'
echo 'identity/opends............${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setglobal g_twainstate '4'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get CAP_SUPPORTEDCAPS...
;
dsmentry src ds dg_control dat_capability msg_get 'CAP_SUPPORTEDCAPS'
echo 'capability/get.............${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setlocal cap_supportedcaps '${ret:}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Set ICAP_XFERMECH to TWSX_FILE...
;
dsmentry src ds dg_control dat_capability msg_set 'ICAP_XFERMECH,TWON_ONEVALUE,TWTY_UINT16,TWSX_FILE'
echo 'capability/set.............${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get ICAP_SUPPORTEDEXTIMAGEINFO (we just want the array portion)...
;
if '${get:cap_supportedcaps}' !~contains 'ICAP_SUPPORTEDEXTIMAGEINFO' goto MAIN.SKIPICAPSUPPORTEDEXTIMAGEINFO
dsmentry src ds dg_control dat_capability msg_get 'ICAP_SUPPORTEDEXTIMAGEINFO'
echo 'capability/get.............${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setlocal ienum '4'
setlocal comma ''
:MAIN.NEXTEXTIMAGEINFO
if '${ret:${get:ienum}}' == '' goto MAIN.SKIPICAPSUPPORTEDEXTIMAGEINFO
setlocal icap_supportedextimageinfo '${get:icap_supportedextimageinfo}${get:comma}${ret:${get:ienum}}'
increment ienum '${get:ienum}' 1
setlocal comma ','
goto MAIN.NEXTEXTIMAGEINFO
:MAIN.SKIPICAPSUPPORTEDEXTIMAGEINFO



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Start scanning...
;
wait reset
dsmentry src ds dg_control dat_userinterface msg_enableds '0,0'
echo 'userinterface/enableds.....${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setglobal g_twainstate '5'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Wait for MSG_XFERREADY, if we don't see it then scoot...
;
wait 30000
echo 'wait.......................${ret:}'
if '${ret:}' !~contains 'msg_xferready' goto MAIN.PASS



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get information about the image...
;
:MAIN.NEXTIMAGEINFO
setglobal g_twainstate '6'
dsmentry src ds dg_image dat_imageinfo msg_get '0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0'
echo 'imageinfo/get..............${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
setlocal twimageinfo.compression '${ret:${get:index.twimageinfo.compression}}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Set up the file transfer...
;
increment imagecount '${get:imagecount}' 1
if '${get:twimageinfo.compression}' == 'JPEG' goto MAIN.JPEG
setlocal twsetupfilexfer.filename '${folder:desktop}/twaincscert/img${format:D6|${get:imagecount}}.tif'
setlocal twsetupfilexfer.format 'TWFF_TIFF'
goto MAIN.SETUPFILEXFER
setlocal twsetupfilexfer.filename '${folder:desktop}/twaincscert/img${format:D6|${get:imagecount}}.jpg'
setlocal twsetupfilexfer.format 'TWFF_JFIF'
:MAIN.SETUPFILEXFER
dsmentry src ds dg_control dat_setupfilexfer msg_set '"${get:twsetupfilexfer.filename}",${get:twsetupfilexfer.format},0'
echo 'setupfilexfer/get..........${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Transfer the image...
;
dsmentry src ds dg_image dat_imagefilexfer msg_get null
echo 'imagefilexfer/get..........${sts:}'
if '${sts:}' != 'XFERDONE' goto MAIN.FAIL
setglobal g_twainstate '7'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get more info about the image (if we can)...
;
if '${get:icap_supportedextimageinfo}' == '' goto MAIN.SKIPEXTIMAGEINFO
run 'extimageinfo' 'g_twextimageinfo' '${get:icap_supportedextimageinfo}'
if '${ret:}' != 'pass' goto MAIN.FAIL
:MAIN.SKIPEXTIMAGEINFO



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; End the transfer, see if we're done...
;
dsmentry src ds dg_control dat_pendingxfers msg_endxfer '0,0'
echo 'pendingxfers/endxfer.......${sts:} - ${ret:}'
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
if '${ret:${get:index.twpendingxfers.count}}' != '0' goto MAIN.NEXTIMAGEINFO
setglobal g_twainstate '5'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; We've passed...
;
:MAIN.PASS
setlocal main.result pass
goto MAIN.EXIT



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; We've run into a problem...
;
:MAIN.FAIL
echo 'ERROR...........${sts:}'
setlocal main.result fail
goto MAIN.EXIT



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Rewind the driver, close and unload the DSM, return...
;
:MAIN.EXIT
call TWAIN.REWIND
return '${get:main.result}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Function: Rewind from any TWAIN state...
; returns: (nothing)
;
:TWAIN.REWIND
;
if '${get:g_twainstate}' < '7' goto REWIND.6
dsmentry src ds dg_control dat_pendingxfers msg_endxfer '0,0'
echo 'pendingxfers/endxfer.......${sts:}'
setglobal g_twainstate '6'
:REWIND.6
if '${get:g_twainstate}' < '6' goto REWIND.5
dsmentry src ds dg_control dat_pendingxfers msg_reset '0,0'
echo 'pendingxfers/reset.........${sts:}'
setglobal g_twainstate '5'
:REWIND.5
if '${get:g_twainstate}' < '5' goto REWIND.4
dsmentry src null dg_control dat_userinterface msg_disableds '0,0'
echo 'userinterface/disableds....${sts:}'
setglobal g_twainstate '4'
:REWIND.4
if '${get:g_twainstate}' < '4' goto REWIND.3
dsmentry src null dg_control dat_identity msg_closeds '0,0,0,ENGLISH_USA,USA,,2,4,0x0,,,${arg:1}'
echo 'identity/closeds...........${sts:}'
setglobal g_twainstate '3'
:REWIND.3
if '${get:g_twainstate}' < '3' goto REWIND.2
dsmentry src null dg_control dat_parent msg_closedsm hwnd
echo 'parent/closedsm............${sts:}'
setglobal g_twainstate '2'
:REWIND.2
if '${get:g_twainstate}' < '2' goto REWIND.1
dsmunload
echo 'dsmunload'
setglobal g_twainstate '1'
:REWIND.1
return
